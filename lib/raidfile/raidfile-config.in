#!@PERL@
use strict;

# should be running as root
if($> != 0)
{
	printf "\nWARNING: this should be run as root\n\n"
}

# check and get command line parameters
if($#ARGV != 4 && $#ARGV != 2)
{
	print <<__E;

Setup raidfile config utility.

Bad command line parameters.
Usage:
    raidfile-config config-dir block-size dir0 [dir1 dir2]

Parameters:
    config-dir        is usually @sysconfdir_expanded@/boxbackup
    block-size        must be a power of two, and usually the block or
                      fragment size of your file system
    dir0, dir1, dir2  are the directories used as the root of the raid
                      file system

If only one directory is specified, then userland RAID is disabled.
Specifying three directories enables it.

__E
	exit(1);
}

my ($config_dir,$block_size,@dirs) = @ARGV;

my $conf = $config_dir . '/raidfile.conf';

# check dirs are unique, and exist
my %d;
for(@dirs)
{
	die "$_ is used twice" if exists $d{$_};
	die "$_ is not a directory" unless -d $_;
	die "$_ should be an absolute path" unless m/\A\//;
	$d{$_} = 1;
}

# check block size is OK
$block_size = int($block_size);
die "Bad block size" if $block_size <= 0;
my $c = 1;
while(1)
{
	last if $c == $block_size;
	die "Block size $block_size is not a power of two" if $c > $block_size;
	$c = $c * 2;
}

# check that it doesn't already exist
if(-f $conf)
{
	die "$conf already exists. Delete and try again";
}

# create directory
if(!-d $config_dir)
{
	print "Creating $config_dir...\n";
	mkdir $config_dir,0755 or die "Can't create $config_dir";
}

# adjust if userland RAID is disabled
if($#dirs == 0)
{
	$dirs[1] = $dirs[0];
	$dirs[2] = $dirs[0];
	print "WARNING: userland RAID is disabled.\n";
}

# write the file
open CONFIG,">$conf" or die "Can't open $conf for writing";

print CONFIG <<__E;

disc0
{
	SetNumber = 0
	BlockSize = $block_size
	Dir0 = $dirs[0]
	Dir1 = $dirs[1]
	Dir2 = $dirs[2]
}

__E

close CONFIG;

print "Config file written.\n";

